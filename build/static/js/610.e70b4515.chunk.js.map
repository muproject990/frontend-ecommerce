{"version":3,"file":"static/js/610.e70b4515.chunk.js","mappings":"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","sources":["components/customer/joinUs.tsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { SetStateAction, useState } from \"react\";\nimport { FieldErrors, UseFormRegister, useForm, UseFormGetFieldState, UseFormGetValues } from \"react-hook-form\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport API from \"../../utils\";\nimport AppLogo from \"../../ui/logo\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { toast } from \"sonner\";\n\nexport default function JoinUs() {\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState(\"\");\n  return (\n    <div className=\"flex p-4 items-center flex-col gap-y-4 justify-center\">\n      <div className=\"flex items-center justify-center\">\n        <AppLogo />\n      </div>\n      {step === 1 ? (\n        <EmailVerificationForm email={email} setEmail={setEmail} setStep={setStep} />\n      ) : (\n        <UserJoinForm email={email} setStep={setStep} />\n      )}\n    </div>\n  );\n}\n\nfunction EmailVerificationForm(props: {\n  setStep: React.Dispatch<SetStateAction<number>>;\n  email:string\n  setEmail: React.Dispatch<SetStateAction<string>>;\n}) {\n  const auth = useAuth()\n  if(auth) {\n    window.location.href = '/'\n  }\n  const [animateEmail, setAnimateEmail] = useState(false);\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    getValues\n  } = useForm<{ email: string }>({\n    defaultValues:{\n      email:props.email\n    }\n  });\n  async function onSubmit(data: { email: string }) {\n    try {\n      const res = await API(\"/email-verification\", {\n        method: \"POST\",\n        data: { email: data.email },\n      });\n      if (res.status === 200) {\n          props.setEmail(data.email);\n          props.setStep(2);\n      }\n    } catch (err) {\n      console.error(\"Error \");\n    }\n  }\n  return (\n    <div className=\"max-w-[450px] text-sm text-gray-700\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col gap-y-1\">\n        <div className=\"flex flex-col gap-y-4\">\n          <h2 className=\"\">Enter your email to join us or sign in.</h2>\n          <div className=\"relative\">\n            <div\n              style={{ width: \"fit-content\" }}\n              className={clsx(\n                \"flex items-center justify-center transition duration-200 px-1 justify-center absolute\",\n                {\n                  \"bottom-[45px] text-xs\": animateEmail,\n                  \"inset-0 \": !animateEmail && !getValues('email') ,\n                },\n              )}\n            >\n              <label className=\"bg-white px-2 rounded\">Email</label>\n            </div>\n            <input\n              onFocus={() => {\n                setAnimateEmail(true);\n              }}\n              className=\"border w-full text-sm rounded p-4\"\n              {...register(\"email\", {\n                required: \"Email is required\",\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"invalid email address\",\n                },\n                onBlur: () => {\n                  setAnimateEmail(false);\n                },\n              })}\n            />\n          </div>\n        </div>\n        {errors.email && (\n          <p>\n            <span className=\"text-red-500 text-xs\">{errors.email.message}</span>\n          </p>\n        )}\n\n        <p className=\"\">\n          By continuing, I agree to SneakerVault &nbsp;\n          <Link className=\"underline\" to={\"/privacy-policy\"}>\n            Privacy Policy &nbsp;\n          </Link>\n          and{\" \"}\n          <Link className=\"underline\" to={\"/terms\"}>\n            Terms of Use.\n          </Link>\n        </p>\n        <div className=\"text-end\">\n        \n          <button\n            type=\"submit\"\n            className=\"bg-gray-700 hover:bg-gray-800 text-white text-sm rounded p-2\"\n          >\n            Continue\n          </button>\n        </div>\n          <p className=\"text-gray-600\">\n          Already have an account?&nbsp;\n          <Link className=\"hover:underline\" to={'/signin'} >Sign in</Link>\n          </p>\n      </form>\n    </div>\n  );\n}\n\ninterface UserJoinForm {\n  code: string;\n  email:string\n  firstName: string;\n  lastName: string;\n  password: string;\n  dateOfBirth: string;\n  agreedToTermsAndPolicy: boolean;\n  address: string;\n}\n\nfunction UserJoinForm(props: {\n  email: string;\n  setStep: React.Dispatch<SetStateAction<number>>;\n}) {\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState: { errors },\n  } = useForm<UserJoinForm>();\n  async function onSubmit(data: UserJoinForm) {\n    try {\n      const res = await API.post(\"join\", {\n        ...data,\n        email: props.email,\n      });\n      if (res.status === 201) {\n        const {token} = res.data\n        if(token) {\n          window.localStorage.setItem('token',token)\n        navigate(\"/collections\", { replace: true });\n        }\n        toast.error('Failed to join, try again later')\n      }\n    } catch (err) {}\n  }\n  return (\n    <div className=\"max-w-[450px] text-sm\">\n      <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col gap-y-2\">\n        <h1 className=\"\">Now let's make you a SneakerVault Member.</h1>\n        <div className=\"flex flex-col gap-y-1\">\n          We've sent a code to\n          <div className=\"flex items-center gap-x-4\">\n            <span className=\"bg-gray-100 px-2\">{props.email}</span>\n            <button\n              className=\"hover:underline\"\n              onClick={() => {\n                props.setStep(1);\n              }}\n            >\n              Edit\n            </button>\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-y-4\">\n          <AnimatedInput\n          getValues={getValues}\n            errors={errors}\n            name=\"code\"\n            label=\"Code\"\n            register={register}\n          />\n          <div className=\"flex items-center gap-x-2\">\n            <AnimatedInput\n          getValues={getValues}\n\n              errors={errors}\n              label=\"First Name\"\n              name=\"firstName\"\n              register={register}\n            />\n            <AnimatedInput\n              errors={errors}\n          getValues={getValues}\n\n              label=\"Last Name\"\n              name=\"lastName\"\n              register={register}\n            />\n          </div>\n          <div>\n            <AnimatedInput\n              errors={errors}\n          getValues={getValues}\n\n              label=\"Password\"\n              name=\"password\"\n              register={register}\n            />\n            <div className=\"p-2\">\n              <div className=\"flex items-center gap-x-2 text-xs\">\n                <Cross />\n                Minimum of 8 characters\n              </div>\n              <div className=\"flex items-center gap-x-2 text-xs\">\n                <Cross />\n                Uppercase, lowercase letters and one number\n              </div>\n            </div>\n          </div>\n          <div>\n            <AnimatedInput\n              errors={errors}\n          getValues={getValues}\n\n              label=\"Address\"\n              name=\"address\"\n              register={register}\n            />\n          </div>\n          <div>\n            <div className=\"relative\">\n              <input\n              className=\"w-full border p-2\"\n                type=\"date\"\n                {...register(\"dateOfBirth\", {\n                  required: \"Date of Birth is required\",\n                })}\n              />\n              {errors.dateOfBirth && (\n                <p className=\"absolute\">\n                  <span>{errors.dateOfBirth?.message}</span>\n                </p>\n              )}\n            </div>\n          </div>\n          <div className=\"flex items-center gap-x-4\">\n            <input\n              {...register(\"agreedToTermsAndPolicy\", {\n                required: \"Check this\",\n              })}\n              className=\"cursor-pointer\"\n              type=\"checkbox\"\n            />\n            <label className=\"text-sm\">\n              I agree to Nike's &nbsp;\n              <Link to={\"/privacy-policy\"}>Privacy Policy</Link>\n              &nbsp; and &nbsp;\n              <Link to={\"/terms\"}>Terms of Use.</Link>\n            </label>\n          </div>\n        </div>\n        <div className=\"text-end mt-2 text-sm\">\n          <button className=\"bg-gray-700 hover:bg-gray-800 text-white rounded p-2\">\n            Create Account\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction AnimatedInput(props: {\n  register: UseFormRegister<any>;\n  errors: FieldErrors<UserJoinForm>;\n  label: string;\n  name: keyof UserJoinForm;\n  getValues:UseFormGetValues<UserJoinForm>\n\n}) {\n  const [animateLabel, setAnimateLabel] = useState(false);\n  console.log(!animateLabel && !props.getValues(props.name))\n  return (\n    <div>\n      <div className=\"relative\">\n        <div\n          style={{ width: \"fit-content\" }}\n          className={clsx(\n            \"flex items-center justify-center transition duration-200 px-1 justify-center absolute\",\n            {\n              \"bottom-[45px] text-xs\": animateLabel,\n              \"inset-0 \": !animateLabel && !props.getValues(props.name),\n            },\n          )}\n        >\n          <label className=\"bg-white px-2 rounded\">{props.label}</label>\n        </div>\n        <input\n          onFocus={() => {\n            setAnimateLabel(true);\n          }}\n          className=\"border w-full text-sm rounded p-4\"\n          {...props.register(props.name, {\n            required: `${props.label} is required`,\n            onBlur: (e) => {\n              setAnimateLabel(false);\n            },\n          })}\n        />\n      </div>\n      {props.errors && (\n        <p>\n          <span className=\"text-red-500 text-xs\">\n            {props.errors[props.name]?.message}\n          </span>\n        </p>\n      )}\n    </div>\n  );\n}\n\nfunction Cross() {\n  return (\n    <svg\n      aria-label=\"Error. Your password needs:\"\n      width=\"11\"\n      height=\"12\"\n      viewBox=\"0 0 11 12\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M0.351562 1.35156L9.64823 10.6482\" stroke=\"#757575\"></path>\n      <path d=\"M9.64823 1.35156L0.351562 10.6482\" stroke=\"#757575\"></path>\n    </svg>\n  );\n}\n"],"names":["JoinUs","step","setStep","useState","email","setEmail","_jsxs","className","children","_jsx","AppLogo","EmailVerificationForm","UserJoinForm","props","useAuth","window","location","href","animateEmail","setAnimateEmail","register","formState","errors","handleSubmit","getValues","useForm","defaultValues","onSubmit","async","data","API","method","status","err","console","error","style","width","clsx","onFocus","required","pattern","value","message","onBlur","Link","to","type","_errors$dateOfBirth","navigate","useNavigate","res","post","token","localStorage","setItem","replace","toast","onClick","AnimatedInput","name","label","Cross","dateOfBirth","_props$errors$props$n","animateLabel","setAnimateLabel","log","concat","e","height","viewBox","fill","xmlns","d","stroke"],"sourceRoot":""}